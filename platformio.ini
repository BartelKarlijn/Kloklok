; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

;It is possible to load settings from the calling program rather than modifying
;the library for each project by modifying the "platformio.ini" file.
;The User_Setup_Select.h file will not load the user setting header files if
;USER_SETUP_LOADED is defined.
;Instead of using #define, use the -D prefix, for example:

; PlatformIO Project Configuration File
[env:esp32doit-devkit-v1]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
;upload_protocol = espota
;upload_port     = 192.168.68.201/update
monitor_speed = 115200
lib_deps = 
	bodmer/TFT_eSPI@^2.4.71
    ottowinter/ESPAsyncWebServer-esphome@^2.1.0
    ayushsharma82/AsyncElegantOTA@^2.2.7
    ayushsharma82/WebSerial @ ^1.3.0

build_flags =
; set your debug output (default=Serial)
 -D DEBUG_ESP_PORT=Serial
; comment the folowing line to enable WiFi debugging
 -D NDEBUG
 ; TFT_eSPI stuff, see TFT_eSPI user_SETUP.h file
 -D USER_SETUP_LOADED=1
 ;-D USER_SETUP_INFO="User_Setup"
 -D GC9A01_DRIVER=1
 -D TFT_SDA_READ=1
 ;For ESP32 Dev board (only tested with GC9A01 display)
 ;The hardware SPI can be mapped to any pins
 -D TFT_MOSI=23
 -D TFT_SCLK=18
 -D TFT_DC=21
 -D TFT_RST=22
 -D TFT_BL=32
 -D SPI_FREQUENCY=40000000
 -D CURRENT_TIME=$UNIX_TIME

extra_scripts = 
    pre:auto_firmware_version.py
